modes = {
  abap: 'abap',
  actionscript: 'actionscript',
  as: 'actionscript',
  ada: 'ada',
  apache_conf: 'apache_conf',
  htacess: 'apache_conf',
  asciidoc: 'asciidoc',
  assembly_x86: 'assembly_x86',
  autohotkey: 'autohotkey',
  batchfile: 'batchfile',
  c9search: 'c9search',
  cpp: 'c_cpp',
  c: 'c_cpp',
  objective_c: 'c_cpp',
  cirru: 'cirru',
  clojure: 'clojure',
  cobol: 'cobol',
  coffee: 'coffee',
  coldfusion: 'coldfusion',
  csharp: 'csharp',
  cs: 'csharp',
  css: 'css',
  curly: 'curly',
  d: 'd',
  dart: 'dart',
  diff: 'diff',
  dot: 'dot',
  erlang: 'erlang',
  ejs: 'ejs',
  forth: 'forth',
  ftl: 'ftl',
  gherkin: 'gherkin',
  glsl: 'glsl',
  golang: 'golang',
  groovy: 'groovy',
  haml: 'haml',
  handlebars: 'handlebars',
  haskell: 'haskell',
  haxe: 'haxe',
  html: 'html',
  html_ruby: 'html_ruby',
  erb: 'html_ruby',
  ini: 'ini',
  jack: 'jack',
  jade: 'jade',
  java: 'java',
  javascript: 'javascript',
  json: 'json',
  jsoniq: 'jsoniq',
  jsp: 'jsp',
  jsx: 'jsx',
  julia: 'julia',
  latex: 'latex',
  less: 'less',
  liquid: 'liquid',
  lisp: 'lisp',
  livescript: 'livescript',
  logiql: 'logiql',
  lsl: 'lsl',
  lua: 'lua',
  luapage: 'luapage',
  lucene: 'lucene',
  makefile: 'makefile',
  matlab: 'matlab',
  markdown: 'markdown',
  mel: 'mel',
  mysql: 'mysql',
  mushcode: 'mushcode',
  nix: 'nix',
  objectivec: 'objectivec',
  ocaml: 'ocaml',
  pascal: 'pascal',
  perl: 'perl',
  pgsql: 'pgsql',
  php: 'php',
  phtml: 'php',
  powershell: 'powershell',
  prolog: 'prolog',
  properties: 'properties',
  protobuf: 'protobuf',
  python: 'python',
  r: 'r',
  rdoc: 'rdoc',
  rhtml: 'rhtml',
  ruby: 'ruby',
  rb: 'ruby',
  rust: 'rust',
  sass: 'sass',
  scad: 'scad',
  scala: 'scala',
  smarty: 'smarty',
  scheme: 'scheme',
  scss: 'scss',
  sh: 'sh',
  sjs: 'sjs',
  space: 'space',
  snippets: 'snippets',
  soy_template: 'soy_template',
  sql: 'sql',
  stylus: 'stylus',
  svg: 'svg',
  tcl: 'tcl',
  tex: 'tex',
  text: 'text',
  txt: 'text',
  textile: 'textile',
  toml: 'toml',
  twig: 'twig',
  typescript: 'typescript',
  visualbasic: 'vbscript',
  vb: 'vbscript',
  vba: 'vbscript',
  velocity: 'velocity',
  verilog: 'verilog',
  xml: 'xml',
  xquery: 'xquery',
  yaml: 'yaml'
}

mode = modes[$("#file_text<%= @file.id %>").attr('data-editor')] ? modes[$("#file_text<%= @file.id %>").attr('data-editor')] : 'javascript'

ace.require('ace/ext/language_tools')

editor = ace.edit("file_text<%= @file.id %>")
editor.getSession().setUseWorker(true);
editor.getSession().setUseWrapMode(true);
editor.getSession().setUseWrapMode(true);

editor.setOptions({
  enableBasicAutocompletion: true
});

editor.setHighlightActiveLine(true);
editor.renderer.setShowGutter(true)
editor.setFontSize('15px')
editor.getSession().setMode("ace/mode/" + mode)
editor.setTheme("ace/theme/xcode")
$("#file_text<%= @file.id %>").show()
$("#file_text<%= @file.id %>").children().show()

var id, undoManager
$(window).load(function() {
  id = $("#files ul li a")[0].className.substring(4)
  undoManager = ace.edit("file_text" + id).getSession().getUndoManager()
})
$(document).on('click', function() {
  $("#editor_context").remove()
})
$(document).on('click', "#files ul li a", function() {
  if(!this.className)
    return
  id = this.className.substring(4)
  undoManager = ace.edit("file_text" + id).getSession().getUndoManager()
})
editor.on('input', function() {
  var el = $(".active").children("a")
  undoManager.hasRedo() ? $("#redo").parent().removeClass('disabled') : $("#redo").parent().addClass('disabled')
  if(!undoManager.hasUndo())
  {
    $('.unsaved').remove()
    $("#undo").parent().addClass('disabled')
  }
  else
    if (-1 === el.html().indexOf("*"))
    {
      $(".active .close_tab").remove()
      $("#undo").parent().removeClass('disabled')
      el.append('<span class="unsaved">*</span><span class="close_tab" data-id="' + id + '"> Ã— </span>')
    }

})

editor.commands.addCommand({
    name: 'saveFile',
    bindKey: {
        win: 'Ctrl-S',
        mac: 'Command-S',
        sender: 'editor|cli'
    },
    exec: function (env, args, request) {
        var id = $($(".active").parent().find(".active")[0]).children().attr("class").substring(4)
        var tmp = ace.edit("file_text" + id)
        $.get("/file/save_file", {id: id, text: tmp.getSession().getValue()}, function (ans) {
            $(".unsaved").remove()
            undoManager.markClean()
        });
    }
});